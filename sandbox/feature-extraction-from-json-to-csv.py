import numpy as np
import os
#from customfeatures import PEFeatureExtractor
from featuresJson import PEFeatureExtractor

import json
import pandas as pd

extractor = PEFeatureExtractor(feature_version=2)

features = np.empty((0, 2381))
labels = np.empty((0,1))
# json_file_paths = ["/Users/skpaul/mac-tamu/dataset/ember-data/ember2018/train_features_0.jsonl", 
#                    "/Users/skpaul/mac-tamu/dataset/ember-data/ember2018/train_features_1.jsonl", 
#                    "/Users/skpaul/mac-tamu/dataset/ember-data/ember2018/train_features_2.jsonl",
#                    "/Users/skpaul/mac-tamu/dataset/ember-data/ember2018/train_features_3.jsonl", 
#                    "/Users/skpaul/mac-tamu/dataset/ember-data/ember2018/train_features_4.jsonl", 
#                    "/Users/skpaul/mac-tamu/dataset/ember-data/ember2018/train_features_5.jsonl"]

json_file_paths = ["/Users/skpaul/mac-tamu/dataset/ember-data/ember2018/test_features.jsonl"]

output_data_path = "/Users/skpaul/mac-tamu/dataset/csv/ember/test-data.csv"
output_label_path = "/Users/skpaul/mac-tamu/dataset/csv/ember/test-label.csv"

counter = 0
total_label_zero = 0
total_label_one = 0
total_unlabeled = 0
for json_file_path in json_file_paths:
    with open(json_file_path, 'r') as file:
        for line in file:
            counter +=1
            if (counter % 1000 == 0):
                print(counter)

            json_obj = json.loads(line)
            train_label = json_obj['label']
            if ( train_label == 0 or train_label == 1):
                
                if(train_label == 1):
                    total_label_one += 1
                else:
                    total_label_zero += 1

                features_for_one_pe_file = np.array(extractor.feature_vector_json(json_obj), dtype=np.float32)
                features = np.vstack((features, features_for_one_pe_file))
                labels = np.vstack((labels, [train_label]))
                
                if (counter % 1000 == 0):
                    with open(output_data_path, 'a') as dataf:
                        np.savetxt(dataf, features, delimiter=',')
                    
                    features = None
                    features = np.empty((0, 2381))

                    with open(output_label_path, 'a') as labelf:
                        np.savetxt(labelf, labels, delimiter=',')
                    #print(counter)
                    labels = None
                    labels = np.empty((0, 1))

            else:
                total_unlabeled += 1


            #print(features.shape)

    #print(features.shape)
    
    with open(output_data_path, 'a') as dataf:
        np.savetxt(dataf, features, delimiter=',')
    features = None
    features = np.empty((0, 2381))

    with open(output_label_path, 'a') as labelf:
        np.savetxt(labelf, labels, delimiter=',')
        #print(counter)
    labels = None
    labels = np.empty((0, 1))
    print(counter)
    print(total_label_zero)
    print(total_label_one)
    print(total_unlabeled)

print(counter)
print(total_label_zero)
print(total_label_one)
print(total_unlabeled)