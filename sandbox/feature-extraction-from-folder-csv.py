import numpy as np
import os
#from customfeatures import PEFeatureExtractor
from features import PEFeatureExtractor

extractor = PEFeatureExtractor(feature_version=2)

features = np.empty((0, 2381))
labels = np.empty((0,1))

pe_file_dirs = [{"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/mw1":1},
                {"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/mw2":1},
                {"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/mw3":1},
                {"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/mw4":1},
                {"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/mw5":1},
                {"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/mw6":1},
                {"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/mw7":1},
                {"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/mw8":1},
                {"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/mw9":1},
                {"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/gw2":0},
                {"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/gw3":0},
                {"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/gw4":0},
                {"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/gw5":0},
                {"/Users/skpaul/mac-tamu/dataset/dataset-by-professor/datasets/gw6":0},
                ]
output_data_path = "/Users/skpaul/mac-tamu/dataset/csv/professor-dataset/prof-data.csv"
output_label_path = "/Users/skpaul/mac-tamu/dataset/csv/professor-dataset/prof-label.csv"

counter = 0
dir_counter= 0
for pe_file_dir_obj in pe_file_dirs:
    for pe_file_dir, test_label in pe_file_dir_obj.items():
        print(pe_file_dir)
        print(test_label)
        for pe_file_path in os.listdir(pe_file_dir):
            pe_file_path = os.path.join(pe_file_dir, pe_file_path)
            # checking if it is a file
            if os.path.isfile(pe_file_path):
                putty_data = open(pe_file_path, "rb").read()
                
                #features = extractor.raw_features(putty_data)
                features_for_one_pe_file = np.array(extractor.feature_vector(putty_data), dtype=np.float32)
                features = np.vstack((features, features_for_one_pe_file))
                labels = np.vstack((labels, [test_label]))


                counter +=1
                if (counter % 100 == 0):
                    with open(output_data_path, 'a') as dataf:
                        np.savetxt(dataf, features, delimiter=',')
                    print(counter)
                    features = None
                    features = np.empty((0, 2381))

                    with open(output_label_path, 'a') as labelf:
                        np.savetxt(labelf, labels, delimiter=',')
                    #print(counter)
                    labels = None
                    labels = np.empty((0, 1))
                #print(features.shape)
            
        #print(features.shape)


with open(output_data_path, 'a') as dataf:
    np.savetxt(dataf, features, delimiter=',')
features = None

with open(output_label_path, 'a') as labelf:
    np.savetxt(labelf, labels, delimiter=',')
#print(counter)
labels = None

print(counter)